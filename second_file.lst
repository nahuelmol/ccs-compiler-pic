CCS PCM C Compiler, Version 5.091, 13314               13-dic-20 00:43

               Filename:   D:\pic-cssc-projects\firstproject\second_file.lst

               ROM used:   58 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include<16f876.h>
.................... //////////// Standard Header file for the PIC16F876 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F876
.................... 
.................... #list
.................... 
.................... 
.................... #fuses XT, NOWDT
.................... #use delay(clock=4000000)
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... 
.................... #BYTE TRISB = 0x86
.................... #BYTE PORTB = 0x86
.................... 
.................... #define onesecond 1000
.................... 
.................... void main(){
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  BCF    03.7
....................    
....................    bit_clear(TRISB,0); //use bit_clear to set pins as output, and pointing the pin with the number of the second argument in "()"
0022:  BCF    06.0
....................    bit_clear(PORTB,0); //then the same as above
0023:  BCF    06.0
....................    
....................    while(1){
....................       
....................       bit_set(PORTB,0);
0024:  BSF    06.0
....................       delay_ms(onesecond);
0025:  MOVLW  04
0026:  BCF    03.5
0027:  MOVWF  21
0028:  MOVLW  FA
0029:  MOVWF  22
002A:  CALL   004
002B:  DECFSZ 21,F
002C:  GOTO   028
....................       bit_clear(PORTB,0);
002D:  BSF    03.5
002E:  BCF    06.0
....................       delay_ms(onesecond);
002F:  MOVLW  04
0030:  BCF    03.5
0031:  MOVWF  21
0032:  MOVLW  FA
0033:  MOVWF  22
0034:  CALL   004
0035:  DECFSZ 21,F
0036:  GOTO   032
0037:  BSF    03.5
0038:  GOTO   024
.................... 
....................    };
....................    
.................... }
0039:  SLEEP

Configuration Fuses:
   Word  1: 3F71   XT NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
